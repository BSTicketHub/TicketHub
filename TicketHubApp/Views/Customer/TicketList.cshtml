@model IEnumerable<TicketHubApp.Models.ViewModels.ShopIssueViewModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var wishIssueJson = Json.Encode(ViewBag.WishIssue);
    var userIdJson = Json.Encode(ViewBag.UserId);
    var modelJson = Json.Encode(Model);
    var ajaxUrl = Json.Encode(Url.Action("ToggleFavoriteList", "Customer"));
    var searchStringJson = Json.Encode(ViewBag.SearchString);
}

<div class="container ticketList">
    <div class="row">
        @*side bar*@
        <div class="col-md-3 p-0">
            @*<div class="bg-white mr-4 my-3 p-3 rounded">
                    <div class="blockTitle d-flex align-items-center justify-content-between mb-2" data-toggle="collapse" aria-controls="countryCollapse" data-target="#countryCollapse">
                        <p class="m-0">地區</p>
                        <span class="iconify" data-icon="ic:outline-keyboard-arrow-down" data-inline="false"></span>
                    </div>
                    <div id="countryCollapse" class="collapse">
                        add button
                    </div>
                </div>*@
            <div class="bg-white mr-4 my-3 p-3 rounded">
                <div class="blockTitle d-flex align-items-center justify-content-between" data-toggle="collapse" aria-controls="categoryCollapse" data-target="#categoryCollapse">
                    <p class="m-0">餐廳類別</p>
                    <span class="iconify" data-icon="ic:outline-keyboard-arrow-down" data-inline="false"></span>
                </div>
                <div>
                    <ul class="collapse mb-0 p-0" id="categoryCollapse">
                        @*add category node*@
                    </ul>
                </div>
            </div>
            <div class="bg-white mr-4 my-3 p-3 rounded">
                <div>
                    <p class="blockTitle blockTitleCancel">價錢(TWD)</p>
                    <div>
                        <input type="text" id="amount" class="my-2" readonly style="border:0; color:#f6931f; font-weight:bold;">
                        <div id="slider-range" class="slider"></div>
                    </div>
                </div>
            </div>
            <div class="bg-white mr-4 my-3 p-3 rounded">
                <div>
                    <button class="tag-search btn btn-success my-2 w-100">搜尋</button>
                </div>
            </div>
        </div>
        <div class="col-md-9 pb-5 px-2 ml-auto issue-list">
            <div class="bg-white mt-3 p-3 d-flex flex-wrap align-items-center rounded-top">
                <span class="ticketListCount mx-2 font-weight-bold" id="ticketListCount"></span>
                <span> 張票券</span>
                <div id="moneySelected" class="mx-2"></div>
                <div id="countrySelected" class="mx-2"></div>
                <div id="categorySelected" class="mx-2"></div>
            </div>
            <div class="bg-white border-top p-3 ticketList-Sort rounded-bottom">
                <span>排序: | </span>
                <a class="hottest">熱門程度</a>
                <span> | </span>
                <a class="price-order">價格 : 低到高</a>
            </div>
            @foreach (var ticket in Model)
            {
                @Html.Partial("_Ticket", ticket)
            }

            <div id="notify"></div>

            <template id="ticketCard">
                <div class="issue bg-white d-flex ticket position-relative rounded w-100 my-3" style="height:250px;">
                    <div class="position-relative ticketImg col-md-4 border"></div>
                    <div class="col-md-8">
                        <h3 class="mt-4 mb-0">TEST</h3>
                        <div class="showTag"></div>
                        <p class="description">TEST MEMO</p>
                        <div>
                            <span class="iconify" data-icon="carbon:location" data-inline="false"></span>
                            <span class="city">TEST TEST</span>
                        </div>
                        <a href="#">
                            <span class="iconify position-absolute go-detail" data-icon="dashicons:arrow-right-alt2" data-inline="false" style="font-size:24px; top:110px; right:10px"></span>
                        </a>
                        <p class="soldNumber m-0 position-absolute" style="left:15px; bottom:10px">TEST</p>
                        <div class="position-absolute" style="right: 10px; bottom: 10px;">
                            <p class="ticketListOldPrice m-0">TWD TEST</p>
                            <p class="ticketListSalesPrice m-0">
                                TWD
                                <span> TEST</span>
                            </p>
                        </div>
                    </div>
                </div>
            </template>

        </div>

    </div>
</div>

@section topCSS{
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

    <link href="~/Assets/CSS/TicketList.min.css" rel="stylesheet" />
    <link href="~/Assets/CSS/Common/Ticket.min.css" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/bff1bb511a.js" crossorigin="anonymous"></script>

    <style>
        body {
            background-color: #f4f4f4;
        }

        .fa-heart {
            font-size: 26px
        }
    </style>

}

@section endJS{
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Assets/JavaScript/Common/iconify.min.js"></script>
    <script src="https://kit.fontawesome.com/bff1bb511a.js" crossorigin="anonymous"></script>
    <script src="~/Assets/JavaScript/Common/buzz.js"></script>
    <script src="~/Assets/JavaScript/Common/ticket.js"></script>

    <script>

        //Buzz
        function createBuzz(title, type) {
            Notify({
                title: `${title}`,
                type: `${type}`,
                duration: 2000,
                position: "top center"
            })
        }

        let searchContent = document.querySelector('.search-content').value = @Html.Raw(searchStringJson);

        // ticket list header -> tickets counting
        let ticketCounting = @Model.Count();
        let countNode = document.getElementById("ticketListCount");
        countNode.innerText = ticketCounting;


        // ticket category node create
        var categoryList = ["中式", "台式", "美式", "日式", "義式", "法式", "泰式", "韓式", "印度料理", "下午茶", "早午餐"];
        let categoryCollapseNode = document.getElementById("categoryCollapse");
        for (let i = 0; i < categoryList.length; i++) {
            let li = document.createElement("li");
            li.classList.add("p-2", "border-bottom", "categoryLi");
            let div = document.createElement("div");
            div.classList.add("form-check", "ml-5");
            let input = document.createElement("input");
            input.classList.add("form-check-input");
            input.type = "checkbox";
            input.id = `category${i}`;

            input.addEventListener("click", (e) => {
                setSelectedButton(input, "categorySelected", categoryList[i]);
                let tag = e.target.closest('div').textContent;
                if (selectedCatagory.indexOf(tag) == -1) {
                    selectedCatagory.push(tag);
                } else {
                    selectedCatagory = selectedCatagory.filter(x => x != tag);
                }
                console.log(selectedCatagory)
            });

            let label = document.createElement("label");
            label.classList.add("form-check-label");
            label.innerText = categoryList[i];
            label.setAttribute("for", `category${i}`);

            div.appendChild(input);
            div.appendChild(label);
            li.appendChild(div);
            categoryCollapseNode.appendChild(li);
        }

        // country node create
        //var countryList = ["台北", "新北", "基隆", "桃園", "新竹", "苗栗",
        //    "台中", "彰化", "南投", "雲林", "嘉義", "台南", "高雄", "屏東",
        //    "宜蘭", "花蓮", "台東", "澎湖", "金門", "連江"];

        //var countryListClass = ["ticketList-button", "ticketList-button-green", "my-1", "mr-1", "rounded-pill"];

        //let countryNode = document.getElementById("countryCollapse");
        //for (let i = 0; i < countryList.length; i++) {
        //    let input = document.createElement("input");
        //    input.classList.add("ticketListBtnCheck");
        //    input.setAttribute("type", "checkbox");
        //    input.setAttribute("id", `countryCheck${i}`);
        //    input.setAttribute("value", countryList[i]);
        //    input.setAttribute("style", "display: none;");

        //    input.addEventListener("click", (e) => {
        //        setSelectedButton(input, "countrySelected", countryList[i]);
        //        let tag = e.target.closest('input').value;
        //        if (selectedCatagory.indexOf(tag) == -1) {
        //            selectedCatagory.push(tag);
        //        } else {
        //            selectedCatagory = selectedCatagory.filter(x => x != tag);
        //        }
        //        console.log(selectedCatagory);
        //    });

        //    let label = document.createElement("label");
        //    label.setAttribute("for", `countryCheck${i}`);
        //    countryListClass.forEach((item) => { label.classList.add(item); });
        //    label.innerText = countryList[i];

        //    countryNode.appendChild(input);
        //    countryNode.appendChild(label);
        //}

        // function country / category / money selected button create
        function setSelectedButton(selectedNode, parentNodeId, innertext) {
            if (selectedNode.checked == true) {
                let span = document.createElement("span");
                span.classList.add("ticketList-SelectBtn", "my-1", "mr-1", "rounded-pill", "bg-light");
                span.setAttribute("id", `${selectedNode.id}Sel`);
                span.innerText = innertext;
                document.getElementById(parentNodeId).appendChild(span);
            } else {
                let child = document.getElementById(`${selectedNode.id}Sel`);
                document.getElementById(parentNodeId).removeChild(child);
            }
        }

        // sider bar (jquery ui)
            $("#slider-range").slider({
                range: true,
                min: 0,
                max: 10000,
                values: [0, 0],
                slide: function (event, ui) {
                    $("#amount").val("$" + ui.values[0] + " - $" + ui.values[1]);
                }
            });
            $("#amount").val("$" + $("#slider-range").slider("values", 0) +
                " - $" + $("#slider-range").slider("values", 1));

            $("#slider-range").bind("slidechange", function (event, ui) {
                let moneySelect = document.getElementById("moneySel");
                if (moneySelect != null) {
                    moneySelect.innerText = "$" + ui.values[0] + " ~ $" + ui.values[1];
                } else {
                    let span = document.createElement("span");
                    span.classList.add("ticketList-SelectBtn", "my-1", "mr-1", "rounded-pill", "bg-light");
                    span.setAttribute("id", "moneySel");
                    span.innerText = "$" + ui.values[0] + " ~ $" + ui.values[1];
                    document.getElementById("moneySelected").appendChild(span);
                }

                minPrice = ui.values[0];
                maxPrice = ui.values[1];
                console.log(minPrice, maxPrice)
            });

        //favorite AJAX
        let url = @Html.Raw(ajaxUrl)

        function controlFromFavorite(Icon) {

            $.ajax({
                cache: false,
                url: url,
                method: "post",
                data: {
                    IssueId: Icon.getAttributeNode('issueid').value,
                    UserId: "@ViewBag.UserId"
                },
                success: function (response) {
                    if (wishIssue.includes(response)) {
                        wishIssue = wishIssue.filter((x) => x != response);
                    } else {
                        wishIssue.push(response);
                    }
                },
                error: function () {
                },
                complete: function () {
                    if ($(Icon).hasClass('fas') || Icon.getAttribute('data-icon') == "bi:heart-fill") {
                        Icon.setAttribute('data-icon', 'bi:heart')
                        Icon.classList.remove('fas');
                        Icon.classList.add('far');
                        createBuzz("已經取消收藏囉", "danger")
                    } else {
                        Icon.setAttribute('data-icon', 'bi:heart-fill')
                        Icon.classList.remove('far');
                        Icon.classList.add('fas');
                        createBuzz("成功加入收藏囉", "success")
                    }
                }
            });
        }

        //Tag Search
        let selectedCatagory = [];
        let maxPrice = 0;
        let minPrice = 0;

        let wishIssue = @Html.Raw(wishIssueJson);
        let userId = @Html.Raw(userIdJson);
        let issueModel = @Html.Raw(modelJson);

        $('.tag-search').click(function () {
            let issues = document.querySelectorAll('.issue');

            for (let i of issues) {
                i.remove();
            }
            CreateTicket();
            compileTag();
        })

        //Search by catogary or price
        let issueList = document.querySelector('.issue-list');
        console.log(issueModel)

        function CreateTicket(compareFunction) {
            let selectedIssue = [];

            for (let i = 0; i < issueModel.length; i++) {

                if (!(maxPrice == 0 && minPrice == 0)) {
                    if (issueModel[i].DiscountPrice > maxPrice || issueModel[i].DiscountPrice < minPrice) {
                        continue
                    }
                }
                if (selectedCatagory.length != 0 && selectedCatagory.indexOf(issueModel[i].Category) == -1) {
                    continue
                }

                selectedIssue.push(issueModel[i]);
            }
            console.log(selectedIssue);
            selectedIssue.sort(compareFunction)

            for (let i = 0; i < selectedIssue.length; i++) {

                let card = document.getElementById("ticketCard");
                let copied = card.content.cloneNode(true);
                copied.querySelector('.ticketImg').style.backgroundImage = `url("${selectedIssue[i].ImgPath}")`
                copied.querySelector('h3').innerText = selectedIssue[i].Title;
                copied.querySelector('.description').innerText = selectedIssue[i].Memo;

                if (wishIssue != null) {
                    let favorite = document.createElement('i');
                    favorite.classList.add('fa-heart', 'position-absolute', 'wishHeart');
                    favorite.setAttribute('issueid', `${selectedIssue[i].Id}`);

                    favorite.addEventListener('click', function (e) {
                        let f = e.currentTarget
                        controlFromFavorite(f);
                    })

                    if (wishIssue.includes(selectedIssue[i].Id)) {
                        favorite.classList.add('fas');
                    } else {
                        favorite.classList.add('far');
                    }

                    copied.querySelector('.issue').append(favorite);
                }

                copied.querySelector('a').href = `/Home/Product/${selectedIssue[i].Id}`
                copied.querySelector('.soldNumber').innerText = `已售數量 : ${selectedIssue[i].SalesAmount}`
                copied.querySelector('.city').innerText = selectedIssue[i].City + " / " + selectedIssue[i].District;
                copied.querySelector('.ticketListOldPrice').innerText = "TWD " + selectedIssue[i].OriginalPrice;
                copied.querySelector('.ticketListSalesPrice span').innerText = selectedIssue[i].DiscountPrice;
                issueList.append(copied);

            }

            countNode.innerText = document.querySelectorAll('.issue').length;
        }

        //Order by price
        document.querySelector('.price-order').addEventListener('click', function () {
            let issues = document.querySelectorAll('.issue');

            for (let i of issues) {
                i.remove();
            }
            CreateTicket(compareByPrice)
            compileTag();
        });

        //Order by hot
        document.querySelector('.hottest').addEventListener('click', function () {
            let issues = document.querySelectorAll('.issue');

            for (let i of issues) {
                i.remove();
            }
            CreateTicket(compareByHot)
            compileTag();
        });

        function compareByPrice(a, b) {
            return a.DiscountPrice - b.DiscountPrice
        }
        function compareByHot(a, b) {
            return b.SalesAmount - a.SalesAmount
        }
    </script>
}