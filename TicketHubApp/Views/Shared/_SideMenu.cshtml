@model IEnumerable<TicketHubApp.Controllers.MenuController.SideMenuItem>
@{
    var pageType = Request.RawUrl.Split('/')[1];
}
<ul class="side-menu rounded side-menu-@pageType">
    @foreach (var menu in Model)
    {
        var hasSubItems = menu.SubMenuItems != null && menu.SubMenuItems.Count() > 0;
        var collapsedClass = hasSubItems && menu.SubMenuItems.Any(s => s.Href != Request.RawUrl) ? "collapsed" : "";

        <li class="@(menu.Href == Request.RawUrl ? "active" : "")">
            <a href="@menu.Href" @(hasSubItems ? "data-toggle=collapse" : "") class="@collapsedClass">
                <span class="iconify mr-2" data-icon="@menu.IconName" data-inline="false"></span>
                <span class="menu-title">@menu.MenuTitle</span>
                @if (hasSubItems)
                {
                    <span class="iconify reverse" data-icon="ic:outline-keyboard-arrow-down" data-inline="false"></span>
                }
            </a>
            @if (hasSubItems)
            {
                <div class="collapse @(menu.SubMenuItems.Any(s=>s.Href==Request.RawUrl) ? "show" : "")" id="@menu.Href.Substring(1)">
                    <ul>
                        @foreach (var subMenu in menu.SubMenuItems)
                        {
                            <li class="sub-item @(subMenu.Href==Request.RawUrl ? "active" : "")">
                                <a href="@subMenu.Href">
                                    <span class="iconify mr-2" data-icon="@subMenu.IconName" data-inline="false"></span>
                                    <span class="menu-title">@subMenu.MenuTitle</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </li>
    }
</ul>