
@{
    ViewBag.Title = "Cart";
}

@Styles.Render("~/bundles/css/Cart")



<div class="container">
    <ol class="row cartProcess">
        <li class="breadcrumb-item"><a href="#">購物車與結帳</a></li>
        <a class="breadcrumb-item active" aria-current="page" href="#">訂購完成</a>
        <!-- 文字無法貼齊 -->
    </ol>
</div>
<div class="container bg-white">
    <div class="cartContent p-3">
        <div>
            <h2>購物車</h2>
        </div>
        <hr />
        <div class="new-table">
            <div class="table-header row text-center">
                <div class="col-1"></div>
                <div class="col-2">圖片</div>
                <div class="col-3">票券簡介</div>
                <div class="col-2">單價</div>
                <div class="col-1">張數</div>
                <div class="col-2">總價</div>
                <div class="col-1">刪除</div>
            </div>
            <div class="table-body text-center mt-3">
                <div class="row" id="shoppingCart">

                </div>
            </div>
            <div class="d-flex justify-content-end">
                <input type="button" value="移至結帳" class="btn btn-info d-flex justify-self-end goCount" />
            </div>

        </div>

        <template id="template">
            <div class="row mt-3 case">
                <div class="col-1 custom-checkbox "><input type="checkbox" /></div>
                <div class="col-2">
                    <img class="w-100" src="../Assets/Images/img/bar.jpg" alt="Alternate Text" />
                </div>
                <div class="col-3 fontsize">
                    <p class="carttitle"></p>
                    <p class="overflow-hidden txth"></p>
                </div>
                <div class="col-2 fontsize disPrice"></div>
                <div class="col-1">
                    <input type="number" class="number w-100">
                </div>
                <div class="col-2"><p class="tPrice mr-3"></p></div>
                <div class="col-1">
                    <i class="fas fa-trash-alt trash mr-4"></i>
                </div>
            </div>
        </template>

        @*合併結帳頁*@
        <div class="cartContent p-3">
            <div class="mt-5">
                <h2>付款明細</h2>
            </div>
            <hr>
            <div class="container">
                @*帳單細項*@
                <div class="text-center row">
                    <div class="row col-9" id="payDetail">
                    </div>
                    <div class="col-3 flex-column justify-content-end text-left d-flex">
                        <p id="totalTickets">商品件數:</p>
                        <p id="totalPrice">銷售總金額:</p>
                        <div class="mt-5 text-right">
                            <input id="payBill" type="button" class="btn w-50 btn-cust" value="確認結帳" />
                        </div>
                    </div>
                </div>
            </div>
            <hr>
        </div>
    </div>
</div>

<template id="AccountInfo">
    <div class="countDetail d-flex">
        <div class="col-2 ">
            <img class="w-100 rounded" src="../Assets/Images/img/bar.jpg" alt="Alternate Text" />
        </div>
        <div class="w-100 col-10 d-flex flex-wrap bill">
            <p class="w-100 text-left ticketName">日月潭紅茶五吃</p>
            <p class="w-100 text-left text-muted ordate">2020/09/30</p>
            <p class="w-100 text-left text-muted unit border-bottom pb-2"></p>
            <div class="row d-flex flex-wrap w-100 justify-content-end">
                <div class="text-left mr-3"><p>總金額</p></div>
                <div class="w-40 text-left totlPrice"><p>450</p></div>
            </div>
        </div>
    </div>
</template>
<script src="https://kit.fontawesome.com/bff1bb511a.js" crossorigin="anonymous"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>

    //導航欄購物車
    let showCart = document.getElementsByClassName("showCart")[0];
    showCart.style.display = "none";
    let open_display = document.getElementsByClassName("open")[0];


    function shopCart() {
        showCart.style.display = "block";
    }

    function shopCartMove() {
        showCart.style.display = "none";
    }

    //購物車顯示事件
    function UpdateCartData() {
        var cart = document.querySelector(".cart")
        cart.innerHTML = '';

        if (localStorage.getItem('Cart') != null) {
            let cartData = JSON.parse(localStorage.getItem('Cart'))

            for (let item of cartData) {
                @*console.log(item);*@
                let carthtml = `
            <div class="cart-item">
                <a href="">
                    <div class="product-img img-bg">
                    </div>
                </a>
                <div class="cart-detail">
                    <div class="product-detail ellipsis">
                        <h3 class="ellipsisw-200">
                            <a href="" id="puttitle" class="ellipsis">${item.title}</a>
                        </h3>
                        <!--div class="product-option ellipsis">${item.details}</div-->
                    </div>
                    <div class="text-tag"></div>
                    <div>數量 x <span class="text-tag putamout" id="putamout">${item.amount}</span></div>
                    <div class="product-pricing">
                        <h4>TWD <span id="putprice">${item.price}</span></h4>
                    </div>
                </div>
                <div class="product-action">
                    <button type="button" class="btn btn-light" onClick="deleteCartItem('${item.id}')">
                        <span class="iconify" data-icon="bi:trash" data-inline="false"></span>
                    </button>
                </div>
            </div>`

                cart.innerHTML += carthtml;
            }
        }

    }



    //購物車更新數量
    function UpcartCounter() {
        let data = JSON.parse(localStorage.getItem('Cart'));
        let counter = 0;
        //console.log(data);
        // 顯示加總數
        for (let item of data) {
            let amount = +item.amount;
            counter = counter + amount;
        }

        document.getElementsByClassName("cartCounter")[0].innerText = counter;
        document.getElementsByClassName("cartCounter")[1].innerText = counter;
    }
</script>


<script>



    var payDetail = document.getElementById("payDetail"); //最一開始的<div .row>空間
    var shoppingCart = document.getElementById("shoppingCart");

    var GetCart = localStorage.getItem("Cart");
    console.log(GetCart);


    window.onload = function () {
        // update navbar cart issue
        UpdateCartData();
        // update navbar cart number
        UpcartCounter();


        function AjaxFunction() {
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: "../ProductCart/GetIssueData",
                data: GetCart,
                success: function (response) {
                    json = JSON.parse(response);
                    @*console.log(json)*@
                    addIssue(json);

                    var numlist = document.querySelectorAll(".number");
                    for (let i of numlist) {

                        i.addEventListener('change', function (e) {
                            let num = e.target.value;
                            let unitPrice = e.target.closest('.row').childNodes[7].innerText;
                            e.target.closest('.row').childNodes[11].innerText = unitPrice * num;
                            if (num < 1) {
                                e.target.value = 1
                                e.target.closest('.row').childNodes[11].innerText = unitPrice * e.target.value;

                            } else {
                                //check stock enough or not
                                StockCheck(this);
                                // update local storage cart data
                                //catchInLocal(this);

                            }
                        })

                    }

                    var trashlist = document.querySelectorAll(".trash");
                    for (let i of trashlist) {
                        @*console.dir(i)*@
                        i.addEventListener('click', function (e) {
                            let tickets = e.target.closest('.case');
                            tickets.remove();
                            deleteLocalTrash(`${this.getAttribute("issueid")}`);
                            // update navbar cart issue
                            UpdateCartData();
                            // update navbar cart number
                            UpcartCounter();
                        });
                    }
                },

                error: function () {
                    alert("failed")
                }
            })
        }
        AjaxFunction();

        function StockCheck(input) {
            var id = String(input.parentElement.parentElement.querySelector("i").getAttribute("issueid"));
            var amount = parseInt(input.value);
            var data = `[{ "id": "${id}", "amount": ${amount} }]`;
            fetch('../ProductCart/GetIssueData', {
                method: 'POST',
                body: data,
                headers: {
                    'Content-Type': 'application/json',
                }
            }).then(function (response) {
                //處理RESPONSE
                console.log(response);
                return response.json();
            }).then(function (data) {
                let dataJ = JSON.parse(data);
                var stock = 0;
                stock = parseInt(dataJ[0].IssuesAmount) - parseInt(dataJ[0].OrderDetailAmount);
                if (input.value > stock) {
                    alert("庫存不足");
                    input.value = stock;
                };
                catchInLocal(id, input.value);
                // update navbar cart issue
                UpdateCartData();
                // update navbar cart number
                UpcartCounter();

                let num = input.value;
                let unitPrice = input.closest('.row').childNodes[7].innerText;
                input.closest('.row').childNodes[11].innerText = unitPrice * num;

            @*return data;*@
            }).catch(function (err) {
                //錯誤處理
                console.log('錯誤', err);
            });

        }


        function addIssue(productCartArray) {
            document.getElementById('shoppingCart').innerHTML = "";
            let card = document.querySelector('#template');

            for (let i in productCartArray) {
                let CartContent = card.content.cloneNode(true);    //複製小卡結點

                let tPrice = productCartArray[i].Amount * productCartArray[i].DiscountPrice;
                CartContent.querySelector("img").src = productCartArray[i].ImgPath;
                CartContent.querySelector(".carttitle").innerText = productCartArray[i].Title;
                CartContent.querySelector(".txth").innerText = productCartArray[i].Memo;
                CartContent.querySelector(".disPrice").innerText = productCartArray[i].DiscountPrice;
                CartContent.querySelector(".number").value = productCartArray[i].Amount;
                CartContent.querySelector(".tPrice").innerHTML = tPrice;
                CartContent.querySelector(".trash").setAttribute("issueId", productCartArray[i].Id);

                shoppingCart.append(CartContent);
            }
        };

        function addTicket(productTicketArray) {
            document.getElementById('payDetail').innerHTML = "";
            let countTK = 0;
            let countPrice = 0;
            let tickets = document.querySelector('#AccountInfo');
            for (let tt in productTicketArray) {
                let ttContent = tickets.content.cloneNode(true);    //複製小卡結點

                let time = new Date();
                let timeNow = time.getFullYear() + "-" + [time.getMonth() + 1] + "-" + time.getDate();
                console.log(timeNow)
                ttContent.querySelector("img").src = productTicketArray[tt].img;
                ttContent.querySelector(".ticketName").innerText = productTicketArray[tt].title;
                ttContent.querySelector(".ordate").innerHTML = timeNow;
                ttContent.querySelector(".unit").innerText = "張數: " + productTicketArray[tt].amount;
                ttContent.querySelector(".totlPrice").innerHTML = productTicketArray[tt].total;
                ttContent.querySelector(".ticketName").setAttribute("issueId", productTicketArray[tt].issueid);
                payDetail.append(ttContent);

                countTK += Number(productTicketArray[tt].amount);
                countPrice += Number(productTicketArray[tt].total);
            }
            document.getElementById("totalTickets").innerText = "總購買張數: " + countTK + " 張";
            document.getElementById("totalPrice").innerText = "總購買金額: " + countPrice + " 元";

            @*console.log(countTK);
            console.log(countPrice);*@
        };

        function deleteLocalTrash(id) {
            console.log(id);
            console.log("cc");
            let getCartData = JSON.parse(localStorage.getItem('Cart'));
            getCartData = getCartData.filter(x => x.id != id);
            localStorage.setItem("Cart", JSON.stringify(getCartData));
            @*upDateNewLocal();*@
        };

        function catchInLocal(id, amount) {
            // call service return bool
            // if true
            let getCartData = JSON.parse(localStorage.getItem('Cart'));
            getCartData = getCartData.map(function (x) {
                if (x.id == id) {
                    x.amount = amount;
                }
                return x;
            });
            localStorage.setItem("Cart", JSON.stringify(getCartData));
            // if false
            // ....
        }

        document.querySelector('.goCount').addEventListener('click', function () {
            let caseValue = document.querySelectorAll(".case");
            console.log(caseValue);
            let array = [];
            for (let i of caseValue) {
                for (let i of document.querySelectorAll('#shoppingCart .number')) {
                    i.disabled = "true";
                }
                let obj = {
                    img: i.children[1].children[0].currentSrc,
                    title: i.children[2].children[0].innerText,
                    amount: i.children[4].children[0].value,
                    total: i.children[5].innerText,
                    issueid: i.children[6].children[0].getAttribute('issueid')
                }
                array.push(obj);
                @*console.log(array);*@
            }
            addTicket(array);
        })

        document.querySelector('#payBill').addEventListener('click', function () {

            let GetCar = localStorage.getItem("Cart");
            let GetCarObj = JSON.parse(GetCar);
            @*let countDetail = document.querySelectorAll(".countDetail");
            for (let i of countDetail) {
                
                let IssuesId = i.id;
                let IssuesAmount = i.Amount;
                let IssuesMoney = i.price;
            }*@

        

            // 資料應該要往上抓，不應該從local
            // 找一個地方安置id

            let IdArray = [];
            let AmountArray = [];
            for (let i of GetCarObj) {
                IdArray.push(i.id)
                AmountArray.push(i.amount)
            }
            var data = JSON.stringify({ UserId: "@ViewBag.UserId", id: IdArray, amount: AmountArray });

            fetch('../ProductCart/CreateOrder', {
                method: 'POST',
                body: data,
                headers: {
                    'Content-Type': 'application/json',
                },
            }).then(function (response) {
                console.log(response);
                return response.json();
            }).catch(function (err) {
                console.log("錯誤", err);
            });

            localStorage.removeItem("Cart");
            swal("訂單已完成", "success");

            location.reload()
        })


    }


</script>
